#lang flit

(print-only-errors #t)
(test (s-exp-match? `NUMBER `10)
      #t)
(test (s-exp-match? `NUMBER `a)
      #f)
(test (s-exp-match? `SYMBOL `a)
      #t)
(test (s-exp-match? `SYMBOL `"a")
      #f)
(test (s-exp-match? `STRING `"a")
      #t)
(test (s-exp-match? `STRING `("a"))
      #f)
(test (s-exp-match? `ANY `("a"))
      #t)
(test (s-exp-match? `ANY `10)
      #t)
(test (s-exp-match? `any `10)
      #f)
(test (s-exp-match? `any `any)
      #t)

(test (s-exp-match? `(SYMBOL) `(a))
      #t)
(test (s-exp-match? `(SYMBOL) `(a b))
      #f)
(test (s-exp-match? `(SYMBOL SYMBOL) `(a b))
      #t)
(test (s-exp-match? `((SYMBOL) SYMBOL) `((a) b))
      #t)
(test (s-exp-match? `((SYMBOL) NUMBER) `((a) b))
      #f)
(test (s-exp-match? `((SYMBOL) NUMBER ((STRING))) `((a) 5 (("c"))))
      #t)
(test (s-exp-match? `(lambda (SYMBOL) ANY) `(lambda (x) x))
      #t)
(test (s-exp-match? `(lambda (SYMBOL) ANY) `(function (x) x))
      #f)

(test (s-exp-match? `(SYMBOL ...) `(a b))
      #t)
(test (s-exp-match? `(a ...) `(a b))
      #f)
(test (s-exp-match? `(a ...) `(a a))
      #t)
(test (s-exp-match? `(a ...) `())
      #t)
(test (s-exp-match? `(a ... b) `())
      #f)
(test (s-exp-match? `(a ... b) `(b))
      #t)
(test (s-exp-match? `(a ... b) `(a a a b))
      #t)
(test (s-exp-match? `((a ...) b ...) `((a a a) b b b b))
      #t)
(test (s-exp-match? `((a ...) b ...) `((a a a) b c b b))
      #f)

(test (s-exp-match? `10 `10)
      #t)
(test (s-exp-match? `#f `#f)
      #t)
(test (s-exp-match? `#t `#t)
      #t)
(test (s-exp-match? `"hello" `"hello")
      #t)
(test (s-exp-match? `10 `#f)
      #f)
(test (s-exp-match? `"hello" `#f)
      #f)
(test (s-exp-match? `#f `10)
      #f)

(test/exn (s-exp-match? `... `10)
          "misplaced")
(test/exn (s-exp-match? `(...) `10)
          "misplaced")
(test/exn (s-exp-match? `(a ... b ...) `10)
          "multiple")
